"""remove_application_and_offer_tables

Revision ID: f4921047d6f1
Revises: 49b144b6349e
Create Date: 2025-03-21 03:23:20.352874

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f4921047d6f1'
down_revision: Union[str, None] = '49b144b6349e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop offers table first since it depends on applications
    op.drop_index('ix_offers_id', table_name='offers')
    op.drop_table('offers')
    
    # Then drop applications table
    op.drop_index('ix_applications_id', table_name='applications')
    op.drop_table('applications')
    
    # Drop the enum type
    op.execute('DROP TYPE applicationstatus')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create enum type first
    op.execute("CREATE TYPE applicationstatus AS ENUM ('APPLIED', 'SCREENING', 'INTERVIEW', 'OFFER_EXTENDED', 'HIRED', 'REJECTED')")
    
    op.create_table('applications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('candidate_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('job_role', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('applied_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('APPLIED', 'SCREENING', 'INTERVIEW', 'OFFER_EXTENDED', 'HIRED', 'REJECTED', name='applicationstatus'), autoincrement=False, nullable=False),
    sa.Column('time_to_fill', postgresql.INTERVAL(), autoincrement=False, nullable=True),
    sa.Column('source_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], name='applications_candidate_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name='applications_job_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], name='applications_source_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='applications_pkey'),
    sa.UniqueConstraint('candidate_id', 'job_id', name='unique_application')
    )
    op.create_index('ix_applications_id', 'applications', ['id'], unique=False)
    
    op.create_table('offers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('application_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('offer_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('accepted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], name='offers_application_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='offers_pkey')
    )
    op.create_index('ix_offers_id', 'offers', ['id'], unique=False)
    # ### end Alembic commands ###
