"""add_company_id_to_candidates

Revision ID: 3235fb3392c6
Revises: 
Create Date: 2025-03-19 23:49:37.112115

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3235fb3392c6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_exam_sessions_id', table_name='exam_sessions')
    op.drop_table('exam_sessions')
    op.drop_index('ix_questions_id', table_name='questions')
    op.drop_table('questions')
    op.drop_index('ix_tests_id', table_name='tests')
    op.drop_index('ix_tests_title', table_name='tests')
    op.drop_table('tests')
    op.add_column('candidates', sa.Column('company_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'candidates', 'companies', ['company_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'candidates', type_='foreignkey')
    op.drop_column('candidates', 'company_id')
    op.create_table('tests',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tests_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='tests_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_tests_title', 'tests', ['title'], unique=False)
    op.create_index('ix_tests_id', 'tests', ['id'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('question_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], name='questions_test_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='questions_pkey')
    )
    op.create_index('ix_questions_id', 'questions', ['id'], unique=False)
    op.create_table('exam_sessions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('candidate_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('test_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], name='exam_sessions_candidate_id_fkey'),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], name='exam_sessions_test_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='exam_sessions_pkey')
    )
    op.create_index('ix_exam_sessions_id', 'exam_sessions', ['id'], unique=False)
    # ### end Alembic commands ###
