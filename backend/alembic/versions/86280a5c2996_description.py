"""description

Revision ID: 86280a5c2996
Revises: cf2a9c85ab7b
Create Date: 2025-03-20 09:53:01.257342

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '86280a5c2996'
down_revision: Union[str, None] = 'cf2a9c85ab7b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('candidates', sa.Column('company_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'candidates', 'companies', ['company_id'], ['id'])
    op.add_column('companies', sa.Column('website', sa.String(), nullable=True))
    op.add_column('companies', sa.Column('location', sa.String(), nullable=True))
    op.alter_column('companies', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_index('ix_companies_name', table_name='companies')
    op.create_index(op.f('ix_companies_name'), 'companies', ['name'], unique=True)
    op.drop_column('companies', 'updated_at')
    op.add_column('jobs', sa.Column('title', sa.String(), nullable=True))
    op.add_column('jobs', sa.Column('description', sa.Text(), nullable=True))
    op.alter_column('jobs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_index('ix_jobs_role', table_name='jobs')
    op.create_index(op.f('ix_jobs_title'), 'jobs', ['title'], unique=False)
    op.drop_column('jobs', 'role')
    op.drop_column('jobs', 'requirements')
    op.drop_column('jobs', 'job_description')
    op.drop_column('jobs', 'properties')
    op.drop_column('jobs', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('jobs', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('properties', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('job_description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('requirements', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_jobs_title'), table_name='jobs')
    op.create_index('ix_jobs_role', 'jobs', ['role'], unique=False)
    op.alter_column('jobs', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('jobs', 'description')
    op.drop_column('jobs', 'title')
    op.add_column('companies', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_companies_name'), table_name='companies')
    op.create_index('ix_companies_name', 'companies', ['name'], unique=False)
    op.alter_column('companies', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('companies', 'location')
    op.drop_column('companies', 'website')
    op.drop_constraint(None, 'candidates', type_='foreignkey')
    op.drop_column('candidates', 'company_id')
    # ### end Alembic commands ###
