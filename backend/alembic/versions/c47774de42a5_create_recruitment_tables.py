"""create recruitment tables

Revision ID: c47774de42a5
Revises: 
Create Date: 2025-03-19 20:24:41.630233

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c47774de42a5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('interviewers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_interviewers_id'), 'interviewers', ['id'], unique=False)
    op.create_table('sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('COLLEGE', 'JOB_PORTAL', 'REFERRAL', 'INTERNAL', 'EXTERNAL', name='sourcetype'), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sources_id'), 'sources', ['id'], unique=False)
    op.create_table('applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('job_role', sa.String(length=255), nullable=False),
    sa.Column('applied_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('APPLIED', 'SCREENING', 'INTERVIEW', 'OFFER_EXTENDED', 'HIRED', 'REJECTED', name='applicationstatus'), nullable=False),
    sa.Column('time_to_fill', sa.Interval(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('candidate_id', 'job_role', name='unique_application')
    )
    op.create_index(op.f('ix_applications_id'), 'applications', ['id'], unique=False)
    op.create_table('exit_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('prediction_date', sa.DateTime(), nullable=True),
    sa.Column('churn_risk', sa.Float(), nullable=True),
    sa.Column('warning_signs', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exit_predictions_id'), 'exit_predictions', ['id'], unique=False)
    op.create_table('performance_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('review_date', sa.DateTime(), nullable=True),
    sa.Column('performance_score', sa.Float(), nullable=True),
    sa.Column('expectation_delivery_timeline', sa.Interval(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_performance_reviews_id'), 'performance_reviews', ['id'], unique=False)
    op.create_table('interviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=True),
    sa.Column('interviewer_id', sa.Integer(), nullable=True),
    sa.Column('interview_date', sa.DateTime(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('culture_fit_score', sa.Float(), nullable=True),
    sa.Column('attitude_score', sa.Float(), nullable=True),
    sa.Column('contribution_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['interviewer_id'], ['interviewers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interviews_id'), 'interviews', ['id'], unique=False)
    op.create_table('offers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=True),
    sa.Column('offer_date', sa.DateTime(), nullable=True),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_offers_id'), 'offers', ['id'], unique=False)
    op.drop_index('ix_questions_id', table_name='questions')
    op.drop_table('questions')
    op.drop_index('ix_tests_id', table_name='tests')
    op.drop_table('tests')
    op.add_column('candidates', sa.Column('phone', sa.String(length=20), nullable=True))
    op.add_column('candidates', sa.Column('location', sa.String(length=255), nullable=True))
    op.add_column('candidates', sa.Column('college', sa.String(length=255), nullable=True))
    op.add_column('candidates', sa.Column('skills', sa.Text(), nullable=True))
    op.alter_column('candidates', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('candidates', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index('ix_candidates_email', table_name='candidates')
    op.drop_index('ix_candidates_name', table_name='candidates')
    op.create_unique_constraint(None, 'candidates', ['email'])
    op.drop_constraint('candidates_job_id_fkey', 'candidates', type_='foreignkey')
    op.drop_column('candidates', 'status')
    op.drop_column('candidates', 'resume_score')
    op.drop_column('candidates', 'assessment_score')
    op.drop_column('candidates', 'job_id')
    op.drop_column('candidates', 'resume_s3_link')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('candidates', sa.Column('resume_s3_link', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('candidates', sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('candidates', sa.Column('assessment_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('candidates', sa.Column('resume_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('candidates', sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('candidates_job_id_fkey', 'candidates', 'jobs', ['job_id'], ['id'])
    op.drop_constraint(None, 'candidates', type_='unique')
    op.create_index('ix_candidates_name', 'candidates', ['name'], unique=False)
    op.create_index('ix_candidates_email', 'candidates', ['email'], unique=True)
    op.alter_column('candidates', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('candidates', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('candidates', 'skills')
    op.drop_column('candidates', 'college')
    op.drop_column('candidates', 'location')
    op.drop_column('candidates', 'phone')
    op.create_table('tests',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tests_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cheated', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('candidate_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], name='tests_candidate_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tests_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_tests_id', 'tests', ['id'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('question', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('choices', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('correct_answer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('candidate_answer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('test_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], name='questions_test_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='questions_pkey')
    )
    op.create_index('ix_questions_id', 'questions', ['id'], unique=False)
    op.drop_index(op.f('ix_offers_id'), table_name='offers')
    op.drop_table('offers')
    op.drop_index(op.f('ix_interviews_id'), table_name='interviews')
    op.drop_table('interviews')
    op.drop_index(op.f('ix_performance_reviews_id'), table_name='performance_reviews')
    op.drop_table('performance_reviews')
    op.drop_index(op.f('ix_exit_predictions_id'), table_name='exit_predictions')
    op.drop_table('exit_predictions')
    op.drop_index(op.f('ix_applications_id'), table_name='applications')
    op.drop_table('applications')
    op.drop_index(op.f('ix_sources_id'), table_name='sources')
    op.drop_table('sources')
    op.drop_index(op.f('ix_interviewers_id'), table_name='interviewers')
    op.drop_table('interviewers')
    # ### end Alembic commands ###
