"""add_company_id_to_candidates

Revision ID: a95d59e97c0d
Revises: 
Create Date: 2025-03-20 12:47:02.269687

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a95d59e97c0d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('difficulty', sa.Integer(), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assessments_id'), 'assessments', ['id'], unique=False)
    op.add_column('applications', sa.Column('job_id', sa.Integer(), nullable=True))
    op.drop_constraint('unique_application', 'applications', type_='unique')
    op.create_unique_constraint('unique_application', 'applications', ['candidate_id', 'job_id'])
    op.create_foreign_key(None, 'applications', 'jobs', ['job_id'], ['id'], ondelete='CASCADE')
    op.add_column('candidates', sa.Column('assessment_score', sa.Float(), nullable=True))
    op.add_column('candidates', sa.Column('resume_score', sa.Float(), nullable=True))
    op.add_column('candidates', sa.Column('resume_summary', sa.Text(), nullable=True))
    op.add_column('candidates', sa.Column('test_summary', sa.Text(), nullable=True))
    op.add_column('companies', sa.Column('departments', sa.ARRAY(sa.String()), nullable=True))
    op.add_column('companies', sa.Column('locations', sa.ARRAY(sa.String()), nullable=True))
    op.add_column('companies', sa.Column('company_size', sa.Integer(), nullable=True))
    op.drop_column('companies', 'location')
    op.drop_column('companies', 'industry')
    op.drop_column('companies', 'description')
    op.add_column('jobs', sa.Column('job_description', sa.Text(), nullable=True))
    op.add_column('jobs', sa.Column('requirements', sa.Text(), nullable=True))
    op.add_column('jobs', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('jobs', sa.Column('properties', sa.JSON(), nullable=True))
    op.drop_column('jobs', 'description')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('jobs', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column('jobs', 'properties')
    op.drop_column('jobs', 'updated_at')
    op.drop_column('jobs', 'requirements')
    op.drop_column('jobs', 'job_description')
    op.add_column('companies', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('industry', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('companies', 'company_size')
    op.drop_column('companies', 'locations')
    op.drop_column('companies', 'departments')
    op.drop_column('candidates', 'test_summary')
    op.drop_column('candidates', 'resume_summary')
    op.drop_column('candidates', 'resume_score')
    op.drop_column('candidates', 'assessment_score')
    op.drop_constraint(None, 'applications', type_='foreignkey')
    op.drop_constraint('unique_application', 'applications', type_='unique')
    op.create_unique_constraint('unique_application', 'applications', ['candidate_id', 'job_role'])
    op.drop_column('applications', 'job_id')
    op.drop_index(op.f('ix_assessments_id'), table_name='assessments')
    op.drop_table('assessments')
    # ### end Alembic commands ###
